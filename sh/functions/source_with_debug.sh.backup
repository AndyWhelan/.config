debug_separator_=" "
[ -z "$debug_indent" ] && debug_indent=0
debug_sep_() {
   local _sep=""
   local _i=0 
   while [ "$_i" -lt "$debug_indent" ]; do
      _sep="${debug_separator_}${_sep}"
      _i=$((_i+1))
   done
   printf "%s" "$_sep"
}

push_indent_() {
   local _indent_inc=${#1}
   _indent_inc=$((_indent_inc + 3))
   debug_indent=$((debug_indent + _indent_inc))
}

pop_indent_() {
   local _indent_inc=${#1}
   _indent_inc=$((_indent_inc + 3))
  # Avoid popping beyond empty
  if [ -z "$debug_indent" ] || [ "$((debug_indent - _indent_inc))" -le 0 ]; then
     debug_indent=0
  else
     debug_indent=$((debug_indent - _indent_inc))
  fi
}

source_with_debug() {
   local _file=$1
   local _sourcer=$2
   local _sourced=$3
   [ "$DEBUG_SHELL" = "1"  ] && echo "$(debug_sep_)${_sourcer}-> ${_sourced}"
   push_indent_ $_sourcer
   local _debug_str="$(debug_sep_)${_sourced}"
   if [ ! -f "$_file" ]; then
      [ "$DEBUG_SHELL" = "1" ] && echo "$_debug_str-> 127"
      pop_indent_ $_sourcer
      return 127
   fi
   if . "$_file"; then
      [ "$DEBUG_SHELL" = "1" ] && echo "$_debug_str-> 0"
      pop_indent_ $_sourcer
      return 0
   else
      [ "$DEBUG_SHELL" = "1" ] && echo "$_debug_str-> 1"
      pop_indent_ $_sourcer
      return 1
   fi
}
