# ~/.shrc
# Sourced by ~/.bashrc, ~/.zshrc, etc.
# Shell context: ( !log, sc=user )
# {{{ Explanation
# If a field is unset in the context tuple, assume it is unspecified and may vary
#       i[nteractive] (bool)    `[ -n "$PS1" ] && echo 1 || echo 0`
#       k[ernel]                `uname -s | tr '[:upper:]' '[:lower:]'`
#       log[in-shell] (bool)    `case "$0" in -*) echo 1 ;; *) echo 0 ;; esac`
#       par[ent process]        `ps -o comm= -p $(ps -o ppid= -p $$)`
#       sc[ope]                 { sys[tem], user }
#       sh[elltype]             { b[ash], z[sh], k[sh], ... }
# }}}

# Script-variables
# {{{
#----helpers
functions_folder="$HOME/.config/shells/functions"
scripts_folder="$HOME/.config/shells/scripts"
#----[n]vim
vimrc_common="$HOME/.common.vim"
vimrc_vanilla="$HOME/.vimrc"
vimrc_neo="$HOME/.config/nvim/init.lua"
#----shell config files
bash_profile="$HOME/.bash_profile"
bashrc="$HOME/.bashrc"
common_profile="$HOME/.common_profile"
common_rc="$HOME/.common_rc"
shellname=$(ps -p $$ -o comm=)
shellname="${shellname#-}" # remove leading dash used for login shell encoding
shellname=$(basename "$shellname")
zprofile="$HOME/.zprofile"
if [ "$shellname" = 'zsh' ]; then
   shellprofile="$zprofile"
elif [ "$shellname" = 'bash' ]; then
   shellprofile="$bash_profile"   
else # assume it's just `shell_profile`
   shellprofile="$HOME/.$shellname"
fi
shellrc="$HOME/.$shellname"rc
zshrc="$HOME/.zshrc"
#  }}}

# Helpers
. "$functions_folder/source_with_debug.sh" # TODO: add checks later

# Guards
. "$scripts_folder/interactive_guard" 'br' # don't run if non-interactive shell
# double-sourcing guard (commented out) {{{
#[ -n "$COMMON_RC_SOURCED" ] && return 0
#COMMON_RC_SOURCED=1
#  }}}

# Sourcing
source_with_debug "$HOME/.cargo/env" 'cr' 'cargo_env' # rust pkg-mgr env

# Command History

# Aliases
#  {{{
#----calendar
alias jan='cal -m 01'
alias feb='cal -m 02'
alias mar='cal -m 03'
alias apr='cal -m 04'
alias may='cal -m 05'
alias jun='cal -m 06'
alias jul='cal -m 07'
alias aug='cal -m 08'
alias sep='cal -m 09'
alias oct='cal -m 10'
alias nov='cal -m 11'
alias dec='cal -m 12'
#----editing
alias e='nvim -O'
alias ebp="e $bash_profile"
alias ebrc="e $bashrc"
alias ecp="e $common_profile"
alias ecrc="e $common_rc"
alias ecvrc="e $common_vimrc"
alias esrc="e $shellrc"
alias evrc="e $HOME/.config/nvim/init.lua $HOME/.common.vim"
alias ezp="e ~/.zprofile"
alias ezrc="e ~/.zshrc"
alias vimdiff="nvim -d"
#----gb
alias gb="cat ~/.gb" # git-wrapper (propr. so not tracked)
#----grep
alias hgrep='history | grep -i'
#----ls
case "$OSTYPE" in
   linux*|gnu*)
      alias ls='ls --color=auto'
      ;;
   darwin*)
      if command -v gls >/dev/null 2>&1; then
         alias ls='gls --color=auto'
      else
         alias ls='ls -G'
      fi
      ;;
   *) # fallback
      ;;
esac
alias lsa='ls -a'
alias lsal='ls -al'
alias lsgi='ls | grep -i'
alias lsl='ls -l'
#----matlab
alias matlab="/Applications/MATLAB_R2024b.app/bin/matlab -r \"userpath('\"$(pwd)\"');\""  # TODO: darwin
#----pip
alias pip=pip3
#----python
alias python=python3
#----sourcing
alias ssrc=". $shellrc"
#  }}}

# Colors: less
# {{{
# Escape code numbers:
# 01 = bold or increased intensity
# 31 = red foreground
# 32 = green foreground
# 33 = yellow foreground
# 44 = blue background
# 0  = reset all attributes
export LESS_TERMCAP_mb=$'\E[01;31m'    # begin blinking text
export LESS_TERMCAP_md=$'\E[01;31m'    # begin bold text
export LESS_TERMCAP_me=$'\E[0m'        # end mode
export LESS_TERMCAP_se=$'\E[0m'        # end standout mode
export LESS_TERMCAP_so=$'\E[01;44;33m' # begin standout mode
export LESS_TERMCAP_ue=$'\E[0m'        # end underline mode
export LESS_TERMCAP_us=$'\E[01;32m'    # begin underline mode
#}}}

# Colors: ls
# {{{
LS_COLORS='bd=34;46'    # Block Device:                  blue text, cyan bg
LS_COLORS+=':cd=34;43'  # Character Device:              blue text, yellow bg
LS_COLORS+=':di=34'     # Directory:                     blue text
LS_COLORS+=':fi=0'      # File (regular):                default text
LS_COLORS+=':ln=36'     # Link (sym):                    cyan text
LS_COLORS+=':ow=0;43'   # Other-Writable directory:      default text, yellow bg
LS_COLORS+=':pi=33'     # Pipe (named, FIFO):            yellow text
LS_COLORS+=':so=35'     # Socket:                        magenta text
LS_COLORS+=':sg=0;46'   # Setgid:                        default text, cyan bg
LS_COLORS+=':su=0;41'   # Setuid:                        default text, red bg
LS_COLORS+=':tw=0;42'   # sTicky and other-Writable dir: default text, green bg
export LS_COLORS
#  }}}

true # explicitly signal success without returning if sourced
